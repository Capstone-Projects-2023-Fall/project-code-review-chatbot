{
  "name": "chatgpt",
  "displayName": "Code Review Chatbot",
  "description": "Use ChatGPT and GPT4 right inside the IDE to enhance and automate your coding with AI-powered assistance",
  "version": "1.1.2",
  "publisher": "CIS4398",
  "icon": "resources/extensionIcon.png",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/Capstone-Projects-2023-Fall/project-code-review-chatbot/"
  },
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "chatgpt",
    "openai",
    "gpt3",
    "gpt4",
    "copilot",
    "ai",
    "explain",
    "find bugs",
    "explain ",
    "refactor"
  ],
  "activationEvents": [
    "*",
    "onView:chatgpt.chatView",
    "onCommand:chatgpt.ask",
    "onCommand:chatgpt.explain",
    "onCommand:chatgpt.codeReview",
    "onCommand:chatgpt.codeReviewAddComments",
    "onCommand:chatgpt.testSuggestions",
    "onCommand:chatgpt.legibilitySuggestions",
    "onCommand:chatgpt.refactor",
    "onCommand:chatgpt.optimize",
    "onCommand:chatgpt.findProblems",
    "onCommand:chatgpt.findProblemsNormal",
    "onCommand:chatgpt.documentation"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "keybindings": [
      {
        "command": "chatgpt.codeReview",
        "key": "ctrl+alt+p"
      }
    ],
    "commands": [
      {
        "command": "chatgpt.ask",
        "title": "Ask ChatGPT"
      },
      {
        "command": "chatgpt.explain",
        "title": "ChatGPT: Explain selection"
      },
      {
        "command": "chatgpt.codeReview",
        "title": "ChatGPT: Code Review"
      },
      {
        "command": "chatgpt.codeReviewAddComments",
        "title": "ChatGPT: Code Review and Add Comments"
      },
      {
        "command": "chatgpt.testSuggestions",
        "title": "ChatGPT: Test Suggestions"
      },
      {
        "command": "chatgpt.legibilitySuggestions",
        "title": "ChatGPT: Legibiliity Suggestions"
      },
      {
        "command": "chatgpt.resetConversation",
        "title": "Reset ChatGPT conversation"
      },
      {
        "command": "chatgpt.tryAgain",
        "title": "Retry ChatGPT request"
      },
      {
        "command": "chatgpt.learnMore",
        "title": "Learn More"
      },
      {
        "command": "chatgpt.findIssue",
        "title": "Find Issue"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "chatgpt.ask",
          "when": "editorTextFocus",
          "group": "chatgpt-menu-group@1"
        },
        {
          "command": "chatgpt.explain",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@2"
        },
        {
          "command": "chatgpt.codeReview",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@7"
        },
        {
          "command": "chatgpt.codeReviewAddComments",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@8"
        },
        {
          "command": "chatgpt.testSuggestions",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@9"
        },
        {
          "command": "chatgpt.legibilitySuggestions",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@10"
        }
      ],
      "commandPalette": [
        {
          "command": "chatgpt.ask"
        },
        {
          "command": "chatgpt.explain",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt.codeReview",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt.codeReviewAddComments",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt.legibilitySuggestions",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt.resetConversation"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "chatgpt",
          "title": "ChatGPT",
          "icon": "resources/icon.png"
        }
      ]
    },
    "views": {
      "chatgpt": [
        {
          "type": "webview",
          "id": "chatgpt.chatView",
          "name": "ChatGPT"
        }
      ]
    },
    "configuration": {
      "title": "chatGPT",
      "type": "object",
      "properties": {
        "chatgpt.useServerApi": {
          "type": "boolean",
          "default": false,
          "description": "Use Server API instead of your own",
          "order": -1
        },
        "chatgpt.enablePreCommitHook": {
          "type": "boolean",
          "default": false,
          "description": "Enable automatic setup of the pre-commit hook.",
          "order": -2
        },
        "chatgpt.apiKey": {
          "markdownDescription": "OpenAI API key from [https://platform.openai.com/account/api-keys](https://platform.openai.com/account/api-keys)",
          "type": "string",
          "order": 0
        },
        "chatgpt.apiUrl": {
          "markdownDescription": "OpenAI API URL or other custom API URL. Defaults to [https://api.openai.com/v1](https://api.openai.com/v1)",
          "type": "string",
          "default": "https://api.openai.com/v1",
          "order": 1
        },
        "chatgpt.model": {
          "type": "string",
          "enum": [
            "gpt-3.5-turbo",
            "gpt-4"
          ],
          "default": "gpt-4",
          "description": "Which GPT model to use",
          "order": 1
        },
        "chatgpt.pasteOnClick": {
          "type": "boolean",
          "default": true,
          "description": "Paste the code from a codeblock inside the response into the editor when you click on it",
          "order": 2
        },
        "chatgpt.promptPrefix.explain": {
          "type": "string",
          "default": "Explain what this code does: ",
          "description": "The prompt prefix used for explaining the selected code",
          "order": 3
        },
        "chatgpt.promptPrefix.documentation": {
          "type": "string",
          "default": "Write documentation for the following code: ",
          "description": "The prompt prefix used for writing documentation for the selected code",
          "order": 7
        },
        "chatgpt.keepConversation": {
          "type": "boolean",
          "default": true,
          "description": "Keep the conversation going by using the same conversation ID for all requests (allows follow-up questions)",
          "order": 8
        },
        "chatgpt.timeoutLength": {
          "type": "number",
          "default": "120",
          "description": "How long should the request wait for a response before timing out (in seconds)",
          "order": 9
        },
        "chatgpt.selectedInsideCodeblock": {
          "type": "boolean",
          "default": true,
          "description": "Append selected code as a codeblock (```...code...```) instead of plain text",
          "order": 10
        },
        "chatgpt.codeblockWithLanguageId": {
          "type": "boolean",
          "default": true,
          "description": "Append language id of the selected code to the codeblock (```language...code...```)",
          "order": 11
        },
        "chatgpt.promptPrefix.codeReview": {
          "type": "string",
          "default": "Please run a Code Review on the following code. The code review must include Variable Naming Conventions, Redundancy Issues, Buggy or broken code, Complexity, and Legibility. Do not give me specific answers on how to fix the code, suggestions only based on the review. Your response must have this specific formatting: the first line of each code review topic must only be the title, and the title will have three tilde symbols on each side of it, like this:  ~~~Complexity~~~. Under the title will be the description of the topic. Between topics will be a line of ten asterisks, such as '**********'.",
          "description": "Code Review of the whole file.",
          "order": 12
        },
        "chatgpt.promptPrefix.codeReviewAddComments": {
          "type": "string",
          "default": "Perform a code review on the following code focus on ways to improve code quality, readability, and maintainability. Also tell me where I can add comments to make my code more clear to other people who may be viewing it: ",
          "description": "The prompt prefix used for reviewing a chunk of code and suggesting comments.",
          "order": 13
        },
        "chatgpt.promptPrefix.testSuggestions": {
          "type": "string",
          "default": "Suggest some tests I can write for the following code. Avoid actually writing the tests out, but explain what some benefical tests would be:",
          "description": "The prompt prefix used for the bot to suggest ways to test code.",
          "order": 14
        },
        "chatgpt.promptPrefix.legibilitySuggestions": {
          "type": "string",
          "default": "Suggest some ways I can make the following code more legible and less complex:",
          "description": "The prompt prefix used for the bot to suggest ways to improve legibility and make code less complex.",
          "order": 15
        },
        "chatgpt.promptPrefix.learnMore": {
          "type": "string",
          "default": "Would like to learn More about the previous suggestion.",
          "description": "LearnMore function for the responses",
          "order": 16
        },
        "chatgpt.promptPrefix.findIssue": {
          "type": "string",
          "default": "Show me all of the code snippets where you identified this issue within your code review:",
          "description": "The prompt prefix used for the bot to show the user where code improvments can be made.",
          "order": 17
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "lint": "eslint src --ext ts",
    "test": "jest",
    "update-package-lock": "npm install --package-lock-only"
  },
  "devDependencies": {
    "@babel/core": "^7.23.2",
    "@babel/preset-env": "^7.23.2",
    "@babel/preset-typescript": "^7.23.2",
    "@types/glob": "^8.0.0",
    "@types/jest": "^29.5.5",
    "@types/node": "16.x",
    "@types/vscode": "^1.73.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "babel-jest": "^29.7.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.5",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.0"
  },
  "dependencies": {
    "@types/dotenv": "^8.2.0",
    "axios": "^1.6.0",
    "chatgpt": "^5.2.5",
    "composer": "^4.1.0",
    "dotenv": "^16.3.1",
    "gpt3-tokenizer": "^1.1.5",
    "mysql2": "^3.6.3",
    "node-fetch": "^3.3.0",
    "yarn": "^1.22.19"
  }
}
