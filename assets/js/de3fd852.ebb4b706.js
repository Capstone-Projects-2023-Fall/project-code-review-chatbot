"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7648],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=s,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=n(7462),s=(n(7294),n(3905));const a={title:"Front End Class Documentation",description:"Front End Class Documentation",hide_table_of_contents:!0,sidebar_position:2},i="Frontend Class Documentation",o={unversionedId:"api-specification/frontend-class-docs",id:"api-specification/frontend-class-docs",title:"Front End Class Documentation",description:"Front End Class Documentation",source:"@site/docs/api-specification/frontend-class-docs.md",sourceDirName:"api-specification",slug:"/api-specification/frontend-class-docs",permalink:"/project-code-review-chatbot/docs/api-specification/frontend-class-docs",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-code-review-chatbot/edit/main/documentation/docs/api-specification/frontend-class-docs.md",tags:[],version:"current",lastUpdatedBy:"trau3",sidebarPosition:2,frontMatter:{title:"Front End Class Documentation",description:"Front End Class Documentation",hide_table_of_contents:!0,sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Class Documentation",permalink:"/project-code-review-chatbot/docs/api-specification/class-documentation"},next:{title:"CRC API Introduction",permalink:"/project-code-review-chatbot/docs/api-specification/design-api-intro"}},l={},c=[{value:"function handleResponse(message)",id:"function-handleresponsemessage",level:2},{value:"Parameters",id:"parameters",level:3},{value:"function handleCodeReviewResponse(message)",id:"function-handlecodereviewresponsemessage",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"function parseSuggestions(response)",id:"function-parsesuggestionsresponse",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"Returns",id:"returns",level:3},{value:"function renderSuggestions(response)",id:"function-rendersuggestionsresponse",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"function renderImageResponse(imageSrc)",id:"function-renderimageresponseimagesrc",level:2},{value:"Parameters",id:"parameters-4",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"frontend-class-documentation"},"Frontend Class Documentation"),(0,s.kt)("h2",{id:"function-handleresponsemessage"},"function handleResponse(message)"),(0,s.kt)("details",{open:"True"},(0,s.kt)("summary",null,"Takes any non-code-review response from ChatGPT, and converts it into formatted HTML with unique formatting for code blocks, and displays it in the extension webview. "),(0,s.kt)("h3",{id:"parameters"},"Parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("h4",{parentName:"li",id:"string-message"},"String message"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"The response from chatGPT."))))),(0,s.kt)("h2",{id:"function-handlecodereviewresponsemessage"},"function handleCodeReviewResponse(message)"),(0,s.kt)("details",{open:"True"},(0,s.kt)("summary",null,"Takes a code review response from ChatGPT, converts it into HTML, and displays it in the extension webview."),(0,s.kt)("h3",{id:"parameters-1"},"Parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("h4",{parentName:"li",id:"string-message-1"},"String message"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"The response from chatGPT."))))),(0,s.kt)("h2",{id:"function-parsesuggestionsresponse"},"function parseSuggestions(response)"),(0,s.kt)("details",{open:"True"},(0,s.kt)("summary",null,"Processes the input response and extracts individual suggestions, each consisting of a title and a description. The response string is expected to have a specific format delineated by specific delimiters for titles and descriptions. "),(0,s.kt)("h3",{id:"parameters-2"},"Parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("h4",{parentName:"li",id:"string-response"},"String response"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"The input string containing a collection of suggestions separated by delimiters.")))),(0,s.kt)("h3",{id:"returns"},"Returns"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("h4",{parentName:"li",id:"object--suggestions"},"Object","[ ]"," suggestions"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"An array containing structured suggestion objects, each consisting of a title and description."))))),(0,s.kt)("h2",{id:"function-rendersuggestionsresponse"},"function renderSuggestions(response)"),(0,s.kt)("details",{open:"True"},(0,s.kt)("summary",null,"Generates HTML elements to display a list of suggestions derived from a parsed response. It takes an array of structured suggestion objects and creates a visual representation of these suggestions, including titles and descriptions, to be rendered within the extension webview."),(0,s.kt)("h3",{id:"parameters-3"},"Parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("h4",{parentName:"li",id:"string-response-1"},"String response"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"The input string containing a collection of suggestions separated by delimiters."))))),(0,s.kt)("h2",{id:"function-renderimageresponseimagesrc"},"function renderImageResponse(imageSrc)"),(0,s.kt)("details",{open:"True"},(0,s.kt)("summary",null," generates HTML to display an image as a response within the extension webview. It receives an image source URL and dynamically creates HTML elements to showcase the image within a specified container."),(0,s.kt)("h3",{id:"parameters-4"},"Parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("h4",{parentName:"li",id:"string-response-2"},"String response"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"The URL source of the image to be displayed as a response."))))))}u.isMDXComponent=!0}}]);