"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[4792],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},c=Object.keys(e);for(a=0;a<c.length;a++)r=c[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)r=c[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),l=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,h=d["".concat(i,".").concat(m)]||d[m]||u[m]||c;return r?a.createElement(h,s(s({ref:t},p),{},{components:r})):a.createElement(h,s({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,s=new Array(c);s[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[d]="string"==typeof e?e:n,s[1]=o;for(var l=2;l<c;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6899:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const c={},s="Class Diagram",o={unversionedId:"system-architecture/ClassDiagram",id:"system-architecture/ClassDiagram",title:"Class Diagram",description:"image",source:"@site/docs/system-architecture/ClassDiagram.md",sourceDirName:"system-architecture",slug:"/system-architecture/ClassDiagram",permalink:"/project-code-review-chatbot/docs/system-architecture/ClassDiagram",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-code-review-chatbot/edit/main/documentation/docs/system-architecture/ClassDiagram.md",tags:[],version:"current",lastUpdatedBy:"Ian Tyler Applebaum",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Sequence Diagrams",permalink:"/project-code-review-chatbot/docs/system-architecture/sequenceDiagrams"},next:{title:"Database Diagram",permalink:"/project-code-review-chatbot/docs/system-architecture/database-diagram"}},i={},l=[{value:"ChatGPTExtension",id:"chatgptextension",level:2},{value:"ChatInterface",id:"chatinterface",level:2},{value:"Backend Server",id:"backend-server",level:2},{value:"Backend Storage",id:"backend-storage",level:2},{value:"ChatGPT API",id:"chatgpt-api",level:2}],p={toc:l};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-diagram"},"Class Diagram"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/Capstone-Projects-2023-Fall/project-code-review-chatbot/main/documentation/static/img/ClassDiagram.png",alt:"image"})),(0,n.kt)("h2",{id:"chatgptextension"},"ChatGPTExtension"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Represents the main class for the ChatGPT extension. It interacts with the chat interface, backened server, and the ChatGPT API.\n")),(0,n.kt)("h2",{id:"chatinterface"},"ChatInterface"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Represents the user interface for chat interactions. It communicates with the extension to send and reciec messages.\n")),(0,n.kt)("h2",{id:"backend-server"},"Backend Server"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Represents the backened server responsivble for storing and managing convesations and communicates with the extensions to store and retrieve data.\n")),(0,n.kt)("h2",{id:"backend-storage"},"Backend Storage"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Holds the API key and recieves/sends the requests the the Backened Server.\n")),(0,n.kt)("h2",{id:"chatgpt-api"},"ChatGPT API"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Represents the external API used to interacts with the ChatGPT model, which handles sending requests to and receiving responses from the external API.\n")))}d.isMDXComponent=!0}}]);