"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7607],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),h=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=h(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=h(n),u=a,m=d["".concat(l,".").concat(u)]||d[u]||p[u]||r;return n?o.createElement(m,i(i({ref:t},c),{},{components:n})):o.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var h=2;h<r;h++)i[h]=n[h];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4757:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>h});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:5},i="Use-case descriptions",s={unversionedId:"requirements/use-case-descriptions",id:"requirements/use-case-descriptions",title:"Use-case descriptions",description:"Case 1:",source:"@site/docs/requirements/use-case-descriptions.md",sourceDirName:"requirements",slug:"/requirements/use-case-descriptions",permalink:"/project-code-review-chatbot/docs/requirements/use-case-descriptions",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-code-review-chatbot/edit/main/documentation/docs/requirements/use-case-descriptions.md",tags:[],version:"current",lastUpdatedBy:"Yoonjae Jason Lee",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Features and Requirements",permalink:"/project-code-review-chatbot/docs/requirements/features-and-requirements"},next:{title:"Software Development Plan",permalink:"/project-code-review-chatbot/docs/category/software-development-plan"}},l={},h=[{value:"<strong>Case 1:</strong>",id:"case-1",level:3},{value:"<strong>Case 2:</strong>",id:"case-2",level:3},{value:"<strong>Case 3:</strong>",id:"case-3",level:3},{value:"<strong>Case 5:</strong>",id:"case-5",level:3},{value:"<strong>Case 6:</strong>",id:"case-6",level:3},{value:"<strong>Case 7:</strong>",id:"case-7",level:3},{value:"<strong>Case 8:</strong>",id:"case-8",level:3},{value:"<strong>Case 9:</strong>",id:"case-9",level:3}],c={toc:h};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-case-descriptions"},"Use-case descriptions"),(0,a.kt)("h3",{id:"case-1"},(0,a.kt)("strong",{parentName:"h3"},"Case 1:")),(0,a.kt)("p",null,"As a temple student taking coding classes, I want a convenient way to check their code to see if they did it correctly."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Student wrote some code, which looks reasonable. Then they tried to build it. It failed"),(0,a.kt)("li",{parentName:"ol"},"They installed the extension from the marketplace in vscode."),(0,a.kt)("li",{parentName:"ol"},"The user tried some features which does a explaining what their code does."),(0,a.kt)("li",{parentName:"ol"},"Extension prompts the user to sign in to use the server API."),(0,a.kt)("li",{parentName:"ol"},"The user sign in, and then the extension shows the user what their code does."),(0,a.kt)("li",{parentName:"ol"},"The user wrote some more code."),(0,a.kt)("li",{parentName:"ol"},"The user decided to build it again then failed, and asked the extension to review their code."),(0,a.kt)("li",{parentName:"ol"},"The extension gives a to-do list to the user where they can improve.")),(0,a.kt)("h3",{id:"case-2"},(0,a.kt)("strong",{parentName:"h3"},"Case 2:")),(0,a.kt)("p",null,"As a tech hobbyist but not a temple student, I don't want to open another tab outside of VS code to talk to GPT."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The user installed the extension from the marketplace in vscode."),(0,a.kt)("li",{parentName:"ol"},"The user decided to use the extension to send a question to the chatGPT."),(0,a.kt)("li",{parentName:"ol"},"The user right-click on the screen and click Ask chatGPT, type in the question, and hit enter."),(0,a.kt)("li",{parentName:"ol"},"The extension prompted the user to log in to their server API."),(0,a.kt)("li",{parentName:"ol"},"The user decided to use their chatGPT API key, since he is not a temple student, he could not sign up with the server API."),(0,a.kt)("li",{parentName:"ol"},"The user stored the API key locally."),(0,a.kt)("li",{parentName:"ol"},"Then right-click on the screen and click Ask chatGPT, type in the question, and hit enter."),(0,a.kt)("li",{parentName:"ol"},"This time the question is answered by chatGPT.")),(0,a.kt)("h3",{id:"case-3"},(0,a.kt)("strong",{parentName:"h3"},"Case 3:")),(0,a.kt)("p",null,"As a temple student, he wants quick tools to help him catch small bugs as well as correct the format of their syntax."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The user wrote some code and debugged them. It looked good."),(0,a.kt)("li",{parentName:"ol"},"Then he found the extension on the marketplace, it sounds promising. "),(0,a.kt)("li",{parentName:"ol"},"The user agrees to the pre-commit hook since he is working with Git."),(0,a.kt)("li",{parentName:"ol"},"Then he used his temple email to sign up for an account, then log in."),(0,a.kt)("li",{parentName:"ol"},"He decided to try this commit detection, so he committed the previous code to git."),(0,a.kt)("li",{parentName:"ol"},"Then the user was asked if they wanted a review for their code."),(0,a.kt)("li",{parentName:"ol"},"The user clicks on Yes, and the extension runs a quick review."),(0,a.kt)("li",{parentName:"ol"},"The user is given a list of things that he could improve on.")),(0,a.kt)("h3",{id:"case-5"},(0,a.kt)("strong",{parentName:"h3"},"Case 5:")),(0,a.kt)("p",null,"As a temple student, they just downloaded this extension they want to sign up for an account."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The user clicks on the chatGPT icon on the left-hand side of the screen."),(0,a.kt)("li",{parentName:"ol"},"The extension prompts them to log in."),(0,a.kt)("li",{parentName:"ol"},"The user clicks on yes to follow to different tab."),(0,a.kt)("li",{parentName:"ol"},"The user clicks the sign-up button on the page."),(0,a.kt)("li",{parentName:"ol"},"The user types all the information into the box and hits submit."),(0,a.kt)("li",{parentName:"ol"},"The website tells the user to verify with their TU email."),(0,a.kt)("li",{parentName:"ol"},"The user presses send."),(0,a.kt)("li",{parentName:"ol"},"The user went into their TU email account, saw the email, and clicked on the link to verify.")),(0,a.kt)("h3",{id:"case-6"},(0,a.kt)("strong",{parentName:"h3"},"Case 6:")),(0,a.kt)("p",null,"As a temple student, they wanted to figure out what this code does, which they had copied from their professor during class. They had been using this extension for a while now."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The user selects the code that they want to be explained."),(0,a.kt)("li",{parentName:"ol"},"Right-click on the vs code window on top of the selected text."),(0,a.kt)("li",{parentName:"ol"},"The extension sends the request to the server API."),(0,a.kt)("li",{parentName:"ol"},"Then the server will turn an answer for the given code that they had selected."),(0,a.kt)("li",{parentName:"ol"},"The extension displays the explanation in the window."),(0,a.kt)("li",{parentName:"ol"},"The user reads it and then can follow along with the code.")),(0,a.kt)("h3",{id:"case-7"},(0,a.kt)("strong",{parentName:"h3"},"Case 7:")),(0,a.kt)("p",null,"As a temple student, a long-term user of the extension. They wanted to do a write some test for the code that they just wrote but they got no idea where to begin."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Start Vscode going back to the working environment."),(0,a.kt)("li",{parentName:"ol"},"Checking the code out."),(0,a.kt)("li",{parentName:"ol"},"Select the code where the user wants to write the test."),(0,a.kt)("li",{parentName:"ol"},"Right-click then click ChatGPT.TestSuggestions."),(0,a.kt)("li",{parentName:"ol"},"The extension will show all the functions to which they can add the test in.")),(0,a.kt)("h3",{id:"case-8"},(0,a.kt)("strong",{parentName:"h3"},"Case 8:")),(0,a.kt)("p",null,"As a temple student, a long-term user of the extension. They wanted to do a review of the code to make it less complex, but they had no idea where to start."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Start Vscode"),(0,a.kt)("li",{parentName:"ol"},"select the code that the user wants to review."),(0,a.kt)("li",{parentName:"ol"},"Log in if they haven't."),(0,a.kt)("li",{parentName:"ol"},"Then right-click the selected code."),(0,a.kt)("li",{parentName:"ol"},"Click the ChatGPT: Legibiliity Suggestions."),(0,a.kt)("li",{parentName:"ol"},"Then the extension would print out all the suggestions that they can make to the given code.")),(0,a.kt)("h3",{id:"case-9"},(0,a.kt)("strong",{parentName:"h3"},"Case 9:")),(0,a.kt)("p",null,"The user wants an instance of ChatGPT in their vs code. So they don't have to go out of vs code to talk to chatGPT."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"start VS code"),(0,a.kt)("li",{parentName:"ol"},"log in to the server if they haven't."),(0,a.kt)("li",{parentName:"ol"},"Right-click any open window, or type in the command palette: chatgpt.start."),(0,a.kt)("li",{parentName:"ol"},"Then a window will persist in the vs code tab until the user decides to close it."),(0,a.kt)("li",{parentName:"ol"},"Then the user can type in anything that they want to ask chatGPT."),(0,a.kt)("li",{parentName:"ol"},"Once they hit enter or click the submit button, the entry will be sent to the server API.")))}d.isMDXComponent=!0}}]);