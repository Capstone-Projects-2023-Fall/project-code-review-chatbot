"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/project-code-review-chatbot/docs/intro","docId":"intro"},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-code-review-chatbot/docs/requirements/system-overview","docId":"requirements/system-overview"},{"type":"link","label":"System Block Diagram","href":"/project-code-review-chatbot/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram"},{"type":"link","label":"General Requirements","href":"/project-code-review-chatbot/docs/requirements/general-requirements","docId":"requirements/general-requirements"},{"type":"link","label":"Features and Requirements","href":"/project-code-review-chatbot/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements"},{"type":"link","label":"Use-case descriptions","href":"/project-code-review-chatbot/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions"}],"href":"/project-code-review-chatbot/docs/category/requirements-specification"},{"type":"category","label":"Software Development Plan","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Activities","href":"/project-code-review-chatbot/docs/development-plan/activities","docId":"development-plan/activities"},{"type":"link","label":"Tasks","href":"/project-code-review-chatbot/docs/development-plan/tasks","docId":"development-plan/tasks"},{"type":"link","label":"Schedule","href":"/project-code-review-chatbot/docs/development-plan/schedule","docId":"development-plan/schedule"},{"type":"link","label":"Development Environment","href":"/project-code-review-chatbot/docs/development-plan/development-environment","docId":"development-plan/development-environment"},{"type":"link","label":"version-control","href":"/project-code-review-chatbot/docs/development-plan/version-control","docId":"development-plan/version-control"}],"href":"/project-code-review-chatbot/docs/category/software-development-plan"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"design","href":"/project-code-review-chatbot/docs/system-architecture/design","docId":"system-architecture/design"},{"type":"link","label":"Component Descriptions","href":"/project-code-review-chatbot/docs/system-architecture/component-descriptions","docId":"system-architecture/component-descriptions"},{"type":"link","label":"Sequence Diagrams","href":"/project-code-review-chatbot/docs/system-architecture/sequenceDiagrams","docId":"system-architecture/sequenceDiagrams"},{"type":"link","label":"Database Diagram","href":"/project-code-review-chatbot/docs/system-architecture/database-diagram","docId":"system-architecture/database-diagram"}],"href":"/project-code-review-chatbot/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design Document - Part II API","href":"/project-code-review-chatbot/docs/api-specification/design-api-intro","docId":"api-specification/design-api-intro"},{"type":"link","label":"API 1 - Swagger Petstore","href":"/project-code-review-chatbot/docs/api-specification/openapi-spec","docId":"api-specification/openapi-spec"},{"type":"link","label":"CalculatorModel.java","href":"/project-code-review-chatbot/docs/api-specification/calculator-model-generated","docId":"api-specification/calculator-model-generated"}],"href":"/project-code-review-chatbot/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit tests","href":"/project-code-review-chatbot/docs/testing/unit-testing","docId":"testing/unit-testing"},{"type":"link","label":"Integration tests","href":"/project-code-review-chatbot/docs/testing/integration-testing","docId":"testing/integration-testing"},{"type":"link","label":"Acceptance test","href":"/project-code-review-chatbot/docs/testing/acceptence-testing","docId":"testing/acceptence-testing"}],"href":"/project-code-review-chatbot/docs/category/test-procedures"}]},"docs":{"api-specification/calculator-model-generated":{"id":"api-specification/calculator-model-generated","title":"CalculatorModel.java","description":"(generated using Javadoc to Markdown)","sidebar":"docsSidebar"},"api-specification/design-api-intro":{"id":"api-specification/design-api-intro","title":"Design Document - Part II API","description":"What should be in this section.","sidebar":"docsSidebar"},"api-specification/openapi-spec":{"id":"api-specification/openapi-spec","title":"API 1 - Swagger Petstore","description":"API Specification from openapi.yml","sidebar":"docsSidebar"},"development-plan/activities":{"id":"development-plan/activities","title":"Activities","description":"","sidebar":"docsSidebar"},"development-plan/development-environment":{"id":"development-plan/development-environment","title":"Development Environment","description":"IDE","sidebar":"docsSidebar"},"development-plan/schedule":{"id":"development-plan/schedule","title":"Schedule","description":"","sidebar":"docsSidebar"},"development-plan/tasks":{"id":"development-plan/tasks","title":"Tasks","description":"","sidebar":"docsSidebar"},"development-plan/version-control":{"id":"development-plan/version-control","title":"version-control","description":"The tool of choice for us is Git. First, all of the team members have worked with Git before on their own projects. Second, this is an efficient tool for managing our development process as it is easy to see which one of our team members contributed work and when the work was completed.  As one of the industry standard tools, Git is more than capable of tracking our files and updates.","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Features and Requirements","description":"Functional","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"- A computer with a modern operating system (Windows, MacOS, Linux)","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"image","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"Use Cases","sidebar":"docsSidebar"},"system-architecture/component-descriptions":{"id":"system-architecture/component-descriptions","title":"Component Descriptions","description":"This is the description page for the different components that will be involved within the project. Check on System Block Diagram for a visual guide on how these components interact with one another.","sidebar":"docsSidebar"},"system-architecture/database-diagram":{"id":"system-architecture/database-diagram","title":"Database Diagram","description":"image","sidebar":"docsSidebar"},"system-architecture/design":{"id":"system-architecture/design","title":"design","description":"Purpose","sidebar":"docsSidebar"},"system-architecture/sequenceDiagrams":{"id":"system-architecture/sequenceDiagrams","title":"Sequence Diagrams","description":"Use Case 1","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"Demonstration of all of the functional and non-functional requirements. This can be a combination of automated tests derived from the use-cases (user stories) and manual tests with recorded observation of the results.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration tests","description":"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input should be provided via mock objects and results verified via mock objects. Integration tests should not require manual entry of data nor require manual interpretation of results.","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit tests","description":"For each method, one or more test cases.","sidebar":"docsSidebar"}}}')}}]);