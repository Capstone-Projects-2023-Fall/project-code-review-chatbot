"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7349],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),s=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},N=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(a),N=r,k=m["".concat(o,".").concat(N)]||m[N]||c[N]||i;return a?n.createElement(k,p(p({ref:t},u),{},{components:a})):n.createElement(k,p({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,p=new Array(i);p[0]=N;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[m]="string"==typeof e?e:r,p[1]=l;for(var s=2;s<i;s++)p[s]=a[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},8614:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={title:"Design API Intro",description:"Design API Intro",hide_table_of_contents:!0,sidebar_position:3},p=void 0,l={unversionedId:"api-specification/design-api-intro",id:"api-specification/design-api-intro",title:"Design API Intro",description:"Design API Intro",source:"@site/docs/api-specification/design-api-intro.md",sourceDirName:"api-specification",slug:"/api-specification/design-api-intro",permalink:"/project-code-review-chatbot/docs/api-specification/design-api-intro",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-code-review-chatbot/edit/main/documentation/docs/api-specification/design-api-intro.md",tags:[],version:"current",lastUpdatedBy:"Jason Lee",sidebarPosition:3,frontMatter:{title:"Design API Intro",description:"Design API Intro",hide_table_of_contents:!0,sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Class Documentation",permalink:"/project-code-review-chatbot/docs/api-specification/class-documentation"},next:{title:"API 1 - Code ReviewChatBot",permalink:"/project-code-review-chatbot/docs/api-specification/openapi-spec"}},o={},s=[{value:"switch",id:"switch",level:2},{value:"Setting",id:"setting",level:2},{value:"ChatGPTHandler",id:"chatgpthandler",level:2},{value:"Search",id:"search",level:2}],u={toc:s};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"switch"},"switch"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Class Purpose: This class starts the extension or turns it off.\n*Data Fields:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"ApiKey",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Type: string"),(0,r.kt)("li",{parentName:"ul"},"Purpose: Store the API key "))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"methods:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"activate()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: Activates extension for the user."),(0,r.kt)("li",{parentName:"ul"},"pre-condition: Vailded user."),(0,r.kt)("li",{parentName:"ul"},"post-condition: None."),(0,r.kt)("li",{parentName:"ul"},"Parameters: ApiKey "),(0,r.kt)("li",{parentName:"ul"},"Exceptions Thrown: If the extension did not start")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"deactivate()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: Deactivate extension for the user."),(0,r.kt)("li",{parentName:"ul"},"pre-condition: It has already started."),(0,r.kt)("li",{parentName:"ul"},"post-condition: None."),(0,r.kt)("li",{parentName:"ul"},"Parameters: context \u2013> The extension's context."),(0,r.kt)("li",{parentName:"ul"},"Exceptions Thrown: If the extension did not end.")))),(0,r.kt)("h2",{id:"setting"},"Setting"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Class Purpose: This class allows the users to change the setting to their own needs.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Data Fields:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"setting",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Type: JSON"),(0,r.kt)("li",{parentName:"ul"},"Purpose: Display all the current settings of the application"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"methods:"),(0,r.kt)("p",{parentName:"li"}," ",(0,r.kt)("strong",{parentName:"p"},"getSettings()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Purpose: get the current setting for the user.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"pre-condition: Vailded user.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"post-condition: None.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Parameters: None.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Exceptions Thrown: None."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"setSettings()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Purpose: apply changes to the current setting for the user.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"pre-condition: Vailded user.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"post-condition: None.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Parameters: None.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Exceptions Thrown: None."))))),(0,r.kt)("h2",{id:"chatgpthandler"},"ChatGPTHandler"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Class Purpose: This class will handle generating the web view from chatGPT")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Data Fields:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"responseFromChatGPT"),(0,r.kt)("li",{parentName:"ul"},"Type: String."),(0,r.kt)("li",{parentName:"ul"},"Purpose: Store the input from ChatGpt."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"methods:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"_getHtmlForWebview()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: generate web view from the GPT response."),(0,r.kt)("li",{parentName:"ul"},"pre-condition: Vaild input."),(0,r.kt)("li",{parentName:"ul"},"post-condition: None."),(0,r.kt)("li",{parentName:"ul"},"Parameters: None."),(0,r.kt)("li",{parentName:"ul"},"Exceptions Thrown: Null input from ChatGPT"),(0,r.kt)("li",{parentName:"ul"},"Return Valid: HTML web view.")))),(0,r.kt)("h2",{id:"search"},"Search"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Class Purpose: This class will provide the capability for the user to type in questions to search.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Data Fields:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"inputForChatGPT"),(0,r.kt)("li",{parentName:"ul"},"Type: String."),(0,r.kt)("li",{parentName:"ul"},"Purpose: Store the input from the user."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"methods:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"search()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Purpose: provide the ability for the user to type in whatever they want into the ChatGPT.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"pre-condition: Vaild input.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"post-condition: None.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Parameters: None.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Exceptions Thrown: Null input from the user.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Return Valid: Response from the ChatGPT."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"resetConversation()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Purpose: provide the ability for the user to erase the previous conversation.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"pre-condition: If there were any data.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"post-condition: None.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Parameters: None.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Exceptions Thrown: If there weren't any data to delete."))))))}m.isMDXComponent=!0}}]);